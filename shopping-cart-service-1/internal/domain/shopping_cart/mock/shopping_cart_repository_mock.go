// Code generated by MockGen. DO NOT EDIT.
// Source: shopping_cart_repository.go

// Package mock_shoppingcart is a generated GoMock package.
package mock_shoppingcart

import (
	reflect "reflect"

	shoppingcart "github.com/go-microservices/shopping-cart-service/internal/domain/shopping_cart"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/satori/go.uuid"
)

// MockShoppingCartRepository is a mock of ShoppingCartRepository interface.
type MockShoppingCartRepository struct {
	ctrl     *gomock.Controller
	recorder *MockShoppingCartRepositoryMockRecorder
}

// MockShoppingCartRepositoryMockRecorder is the mock recorder for MockShoppingCartRepository.
type MockShoppingCartRepositoryMockRecorder struct {
	mock *MockShoppingCartRepository
}

// NewMockShoppingCartRepository creates a new mock instance.
func NewMockShoppingCartRepository(ctrl *gomock.Controller) *MockShoppingCartRepository {
	mock := &MockShoppingCartRepository{ctrl: ctrl}
	mock.recorder = &MockShoppingCartRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShoppingCartRepository) EXPECT() *MockShoppingCartRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockShoppingCartRepository) Create(spc shoppingcart.ShoppingCart) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", spc)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockShoppingCartRepositoryMockRecorder) Create(spc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockShoppingCartRepository)(nil).Create), spc)
}

// GetByUserID mocks base method.
func (m *MockShoppingCartRepository) GetByUserID(userId *uuid.UUID) (*shoppingcart.ShoppingCart, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUserID", userId)
	ret0, _ := ret[0].(*shoppingcart.ShoppingCart)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUserID indicates an expected call of GetByUserID.
func (mr *MockShoppingCartRepositoryMockRecorder) GetByUserID(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUserID", reflect.TypeOf((*MockShoppingCartRepository)(nil).GetByUserID), userId)
}
